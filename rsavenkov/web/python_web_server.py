# импортируем стандартный веб сервер
import http.server
# импортируем библиотеку для работы с сокетами
import socketserver

# объявляем порт по которому будет работать(слушать) наш сервер
PORT = 8000

# создаем ссылку на класс SimpleHTTPRequestHandler
# который судя по doc string является простым обработчиком http запросов GET и HEAD
Handler = http.server.SimpleHTTPRequestHandler

# конструкция with говорит что за вас все ресурсы будут автоматически закрыты.
# Через префикс socketserver вы создаете объекта класса TCPServer, который судя по описанию является базовым socket сервером
# при создании объекта передаем ему адресс как пустую строку и порт по которму будем слушать, а также ссылку на обработчик запросов
# httpd это псевдоним под которым будем работать с сервером
with socketserver.TCPServer(("", PORT), Handler) as httpd:
    print("serving at port", PORT)
    # судя по описанию метода - обрабатывает запрос и ждет следующий пока сервер не будет выключен
    httpd.serve_forever()

# Код я не выдумывал, а взял из doc-ов по питону. Вот таким вот образом разработчики питона предлагают нам реализовывать веб сервер из кода.
# Вы можете предложить свою реализацию веб сервера, запрограммировав его на более низком api - socket programming